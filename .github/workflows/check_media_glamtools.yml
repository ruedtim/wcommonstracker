name: Check Media Usage via GLAM Tools

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual triggering
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  check-usage-glamtools:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: requirements.txt
    
    - name: Set up Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
    
    - name: Set up ChromeDriver
      uses: browser-actions/setup-chromedriver@v1
    
    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
    
    - name: Run GLAM Tools check
      run: |
        python check_media_glamtools.py

    - name: Install jq (for parsing run summary)
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
    
    - name: Commit and push reports
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add reports/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          TOTAL_CHANGES=0
          CATEGORY_SUMMARY=""
          if [ -f reports/run_summary.json ]; then
            TOTAL_CHANGES=$(jq -r '.total_changes // 0' reports/run_summary.json || echo 0)
            CATEGORY_SUMMARY=$(jq -r '[.categories[] | "\(.label):\(.changes)"] | join(", ")' reports/run_summary.json || echo "")
          fi
          if [ -n "$CATEGORY_SUMMARY" ]; then
            git commit -m "Update media usage report (+${TOTAL_CHANGES} changes) - $(date +'%Y-%m-%d') [$CATEGORY_SUMMARY]"
          else
            git commit -m "Update media usage report (+${TOTAL_CHANGES} changes) - $(date +'%Y-%m-%d')"
          fi
        fi
        git pull --rebase origin main
        git push origin HEAD:main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload reports as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: media-usage-reports-${{ github.run_number }}
        path: reports/
        retention-days: 90
